import{vlElement}from"/node_modules/vl-ui-core/dist/vl-core.min.js";import{OlGeoJSON,OlVectorLayer,OlVectorSource,OlClusterSource,OlPoint}from"/node_modules/vl-mapactions/dist/vl-mapactions.js";export class VlMapLayer extends(vlElement(HTMLElement)){static get _observedAttributes(){return["auto-extent","features"]}constructor(){super(),VlMapLayer._counter=0,this.__geoJSON=new OlGeoJSON,this.__counter=++VlMapLayer._counter}async connectedCallback(){this._layer=this.__createLayer(),await this._mapElement.ready,this._configureMap()}static get _counter(){return this.__counter}static set _counter(t){this.__counter=t}get layer(){return this._layer}get source(){return this._source}get features(){const t=this.getAttribute("features");return t?this.__geoJSON.readFeatures(t):[]}get visible(){return this._layer.getVisible()}get style(){if(this._layer)return this._layer.getStyle()}get title(){return this.get("title")}set features(t){this.setAttribute("features",JSON.stringify(t))}set style(t){this._style=t,this._layer.setStyle(t)}set visible(t){this._layer.setVisible(t)}get _name(){return this.getAttribute("name")||"kaartlaag"}get _autoExtent(){return null!=this.getAttribute("auto-extent")}get _autoExtentMaxZoom(){return this.getAttribute("auto-extent-max-zoom")}get _cluster(){return null!=this.getAttribute("cluster")}get _clusterDistance(){return this.getAttribute("cluster-distance")}get _minResolution(){return this.getAttribute("min-resolution")||0}get _maxResolution(){return this.getAttribute("max-resolution")||1/0}get _mapElement(){return this.parentNode&&this.parentNode.map?this.parentNode:null}get(t){return this._layer.get(t)}removeFeaturesStyle(){this._source&&this._source.getFeatures()&&this._source.getFeatures().forEach((t=>{t.setStyle(null)}))}rerender(){this._mapElement&&this._mapElement.rerender()}getFeature(t){if(this._source&&this._source.getFeatures())return this._source.getFeatures().filter((e=>e.getId()===t))[0]}getCluster(t){if(this._layer)return this._layer.getSource().getFeatures().filter((e=>{const r=e.get("features");return!!r&&r.some((e=>e.getId()===t))}))[0]}async zoomToExtent(t){this._mapElement.zoomTo(this.__boundingBox,t)}isVisibleAtResolution(t){const e=parseFloat(this._layer.getMaxResolution());return t>=parseFloat(this._layer.getMinResolution())&&t<e}_autoExtentChangedCallback(){this.__autoZoomToExtent()}_featuresChangedCallback(t,e){e&&this._layer&&(this._source.clear(),this._source.addFeatures(this.features),this.__autoZoomToExtent(),this.rerender())}__autoZoomToExtent(){this._autoExtent&&this.zoomToExtent(this._autoExtentMaxZoom)}__createLayer(){const t=new OlVectorLayer({title:this._name,source:this.__createSource(this.features),updateWhileAnimating:!0,updateWhileInteracting:!0,minResolution:this._minResolution,maxResolution:this._maxResolution});return t.set("id",this.__counter),t}__createSource(t){return this._source=new OlVectorSource({features:t}),this._cluster?this.__createClusterSource(this._source):this._source}__createClusterSource(t){return new OlClusterSource({distance:this._clusterDistance,source:t,geometryFunction:t=>{const e=t.getGeometry();return e instanceof OlPoint?e:this.__ignoreClustering()}})}get __boundingBox(){if(this._source&&this._source.getFeatures().length>0)return this._source.getExtent()}__ignoreClustering(){return null}_configureMap(){this._mapElement&&(this._mapElement.addLayer(this._layer),this.__autoZoomToExtent())}}