import{vlElement}from"/node_modules/vl-ui-core/dist/vl-core.min.js";export class VlMapLayer extends(vlElement(HTMLElement)){static get _observedAttributes(){return["hidden"]}constructor(){super(),VlMapLayer._counter=0,this.__counter=++VlMapLayer._counter,this.__ready=!1}async connectedCallback(){this.__setIsLayerMarkerAttribute(),this.mapElement&&(await this.mapElement.ready,this.mapElement.addLayer(this._layer)),this.__markAsReady()}static get _counter(){return this.__counter}static set _counter(e){this.__counter=e}get layer(){return this._layer}get source(){return this._source}get visible(){return this._layer.getVisible()}get title(){return this.get("title")}set visible(e){this._layer.setVisible(e),this.rerender()}get mapElement(){return this.parentNode&&this.parentNode.map?this.parentNode:null}get ready(){return this.__ready}get _name(){return this.getAttribute("name")||"kaartlaag"}get _minResolution(){return this.getAttribute("min-resolution")||0}get _maxResolution(){return this.getAttribute("max-resolution")||1/0}get _visible(){return null==this.getAttribute("hidden")}get(e){return this._layer.get(e)}rerender(){this.mapElement&&this.mapElement.rerender()}isVisibleAtResolution(e){const t=parseFloat(this._layer.getMaxResolution());return e>=parseFloat(this._layer.getMinResolution())&&e<t}_hiddenChangedCallback(e,t){this._layer&&(this.visible=null==t)}__setIsLayerMarkerAttribute(){this.dataset.vlIsLayer=!0}__markAsReady(){this.__ready=!0}}